#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;

our $APP_HDDTEMP = '/usr/sbin/hddtemp';
our $PARAMETER = '';
our $ARG_LIMIT_MIN = 15;
our $ARG_LIMIT_MAX = 40;

main();

sub isANumber {
    my $possibleNumber = shift;

    return 1 if ( $possibleNumber =~ /\d+/ );
    return 0;
}

sub parseArguments {
    GetOptions(
        '--min=i' => \$ARG_LIMIT_MIN,
        '--max=i' => \$ARG_LIMIT_MAX,
        '--disk=s' => \$PARAMETER
    );

    if ( ! isANumber($ARG_LIMIT_MIN) ) {
        exitUnknown('Argument --min isn\'t a number');
    }

    if ( ! isANumber($ARG_LIMIT_MAX) ) {
        exitUnknown('Argument --max isn\'t a number');
    }

    if ( $ARG_LIMIT_MIN <= 0 ) {
        exitUnknown('Argument --min can\'t be 0 or below');
    }

    if ( $ARG_LIMIT_MAX <= 0 ) {
        exitUnknown('Argument --max can\'t be 0 or below');
    }

    if ( $ARG_LIMIT_MIN >= $ARG_LIMIT_MAX ) {
        exitUnknown('Argument --min is greater than --max');
    }
}

sub main {

  checkEnvironment();
  parseArguments();

  my $output = `$APP_HDDTEMP /dev/$PARAMETER`;

  #/dev/sda: KINGSTON SV300S37A120G: 12°C
  if ( $output =~ m/(\d+)°C$/ ) {
    my $temperatur = $1;

    printf("OK - Temperatur von /dev/%s: %d°C|temperatur=%d\n",
      $PARAMETER,
      $temperatur,
      $temperatur);

    exit(0);
  }
  else {
    exit(2);
  }

}

sub exitUnknown {
    printf("UNKNOWN - %s\n", shift);
    exit(3);
}

sub checkEnvironment {
  exitUnknown("Command 'hddtemp' not found in $APP_HDDTEMP") if ( ! -e $APP_HDDTEMP );
}
