#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;

our $APP_HDDTEMP = '/usr/sbin/hddtemp';
our $PARAMETER = '';
our $ARG_LIMIT_MIN = 15;
our $ARG_LIMIT_MAX = 40;

sub isANumber {
    my $possibleNumber = shift;

    return 1 if ( $possibleNumber =~ /\d+/ );
    return 0;
}

sub exitUnknown {
    printf("UNKNOWN - %s\n", shift);
    exit(3);
}

sub exitCritical {
    printf("CRITICAL - %s\n", shift);
    exit(2);
}

sub parseArguments {
    GetOptions(
        '--min=i' => \$ARG_LIMIT_MIN,
        '--max=i' => \$ARG_LIMIT_MAX,
        '--disk=s' => \$PARAMETER
    );

    if ( ! isANumber($ARG_LIMIT_MIN) ) {
        exitUnknown('Argument --min isn\'t a number');
    }

    if ( ! isANumber($ARG_LIMIT_MAX) ) {
        exitUnknown('Argument --max isn\'t a number');
    }

    if ( $ARG_LIMIT_MIN <= 0 ) {
        exitUnknown('Argument --min can\'t be 0 or below');
    }

    if ( $ARG_LIMIT_MAX <= 0 ) {
        exitUnknown('Argument --max can\'t be 0 or below');
    }

    if ( $ARG_LIMIT_MIN >= $ARG_LIMIT_MAX ) {
        exitUnknown('Argument --min is greater than --max');
    }
}

sub checkEnvironment {
  exitUnknown("Command 'hddtemp' not found in $APP_HDDTEMP") if ( ! -e $APP_HDDTEMP );
}

sub fetchTemperature {
    my $output = `$APP_HDDTEMP /dev/$PARAMETER`;

    if ( $output =~ m/(\d+)째C$/ ) {
        return $1;
    }
    else {
        exitCritical('Was not able to retrieve temperature');
    }
}

sub buildPerformanceString {
    my $temperature = shift;

    return sprintf('temperature=%d;%d;%d',
        $temperature,
        $ARG_LIMIT_MIN,
        $ARG_LIMIT_MAX);
}

sub main {

  checkEnvironment();
  parseArguments();

  my $temperature = fetchTemperature();
  my $performanceString = buildPerformanceString($temperature);

  if ( $temperature < $ARG_LIMIT_MIN ) {
      exitCritical(sprintf('It\'s too cold! Only %d 째C!|%s',
          $temperature,
          $performanceString));
  }
  elsif ( $temperature > $ARG_LIMIT_MAX ) {
      exitCritical(sprintf('It\'s too hot! Over %d 째C!|%s',
          $temperature,
          $performanceString));
  }
  else {
      printf("OK - Temperature of /dev/%s: %d 째C|%s\n",
        $PARAMETER,
        $temperature,
        $performanceString);
  }

}

main();
